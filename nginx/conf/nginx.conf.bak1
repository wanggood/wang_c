user  nobody;
worker_processes  4;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;

worker_rlimit_nofile 203568;
worker_rlimit_core 2000M;

events {
    worker_connections  201784;
}


http {
    include       mime.types;
    server_tokens off;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

     log_format main '$remote_addr - [$time_local] "$request_method $scheme://$http_host$request_uri TCP/$server_protocol" $status $bytes_sent "$http_referer" "$http_user_agent"';

    access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

    #gzip  on;

     resolver 127.0.0.1;
     include /usr/local/nginx/conf/proxy_cache_size.conf;
     include /usr/local/nginx/conf/http_upstreams.conf;

    server {
        listen       80;
        server_name  localhost;
        #server_name  www.a.com;
	

        #charset koi8-r;


        #access_log  logs/host.access.log  main;
	tcp_nopush on;
	sendfile on;

        location / {
            #root   html;
            #index  index.html index.htm;

	    proxy_next_upstream http_502 http_504 error timeout invalid_header;
	    proxy_cache cache_one;
	    proxy_cache_valid 200 304 12h;
	    proxy_cache_key $host$uri$is_args$args;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Accept-Encoding "gzip" ;
	    proxy_pass http://$host;
	    expires 1d;
        }

	 location ~/purge(/.*) {
	    allow 127.0.0.1;
	    #allow 192.168.153.0/24;
	    allow 192.168.153.128;
	    deny all;
	    #proxy_cache_purge cache_one $host$1$is_args$args;
	    proxy_cache_purge cache_one $host$1$is_args$args;
	 }
	#location ~* \.(gif|jpg|jpeg|png|bmp|swf)$ {
	#     valid_referers none blocked *.bb.com;
	#     if ($invalid_referer) {
	#        return 403;
	#     }
	#}

	 location ~ .*\.(gif|png|htm|css|js|flv|ico|swf)(.*) {
	    proxy_redirect off;
	    proxy_set_header Host $host;
	    proxy_cache cache_one;
	    proxy_cache_valid 200 302 12h;
	    proxy_cache_valid 301 1d;
	    proxy_cache_valid any 1m;
	    proxy_cache_key $host$uri$is_args$args;
	    proxy_set_header Accept-Encoding "gzip" ;
	    proxy_pass http://$host;
	    expires 1d;
	}

	 location ~ .*\.(php|jsp|cgi)?$ {
	    proxy_set_header Host $host;
	    proxy_set_header X-Forwarded-For $remote_addr;
	    #proxy_set_header Accept-Encoding "gzip" ;
	    proxy_pass http://$host;
	}


   #----------------------------------------------------------
  

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
